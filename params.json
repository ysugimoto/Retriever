{"name":"Retriever","tagline":"A simple / lightweight JavaScript template engine","body":"Retriever\r\n=========\r\n\r\nA simple / lightweight JavaScript template engine ( node / browser )\r\n\r\n## Documentation\r\n\r\nClass document is available:\r\n\r\n---\r\n\r\n## How to build ( for browser )\r\n\r\nInstall task / test tool at global:\r\n\r\n```\r\nnpm install -g grunt-cli mocha\r\n```\r\n\r\nInstall development npms\r\n\r\n```\r\nnpm install .\r\n```\r\n\r\nRun the build task\r\n\r\n```\r\ngrunt build\r\n```\r\n\r\n---\r\n\r\n## Basic Usage\r\n\r\n`Retriever.make(template)` and `parse(params)` will returns parsed string.\r\n\r\n### In node\r\n\r\nSimple require and call method.\r\n\r\n```\r\nvar Retriever = require('retriever');\r\nvar template  = 'Hello, {{libName}}!'\r\nvar bind      = { libName: 'Retriever' };\r\n\r\n// will returns 'Hello, Retriever!'\r\nvar result = Retriever.make(template).parse(bind);\r\n```\r\n\r\n### In browser\r\n\r\nLoad a build-scripta and call method.\r\n\r\n```\r\n<script src=\"build/retriever.min.js\"></script>\r\n<script>\r\nvar template = 'Hello, {{libName}}!'\r\nvar bind     = { libName: 'Retriever' };\r\n\r\n// will returns 'Hello, Retriever!'\r\nvar result = Retriever.make(template).parse(bind);\r\n</script>\r\n```\r\n\r\n## Supported sections\r\n\r\n### if-elseif-else\r\n\r\n```\r\nvar template = \"{{if dat == 'foo'}}foo{{else if dat == 'bar'}}bar{{else}}baz{{/if}}\"\r\nvar bind     = { dat: 'bar' };\r\n\r\n// will returns 'bar'\r\nvar result = Retriever.make(template).parse(bind);\r\n```\r\n\r\n#### Supported features\r\n\r\n- Relational operators: `>`, `<`, `>=`, `<=`, `==`. `===`, `!=`, `!==`\r\n- Logical operators: `&&`, `||`\r\n- Calculation like: `{{if a + b > 100 * 10}}` ( a, b is supplied from parser parameter )\r\n\r\n### loop\r\n\r\n```\r\nvar template = \"{{loop section}}{{value}}{{/loop}}\"\r\nvar bind     = {\r\n    section: [\r\n        { value: 'foo' },\r\n        { value: 'bar' },\r\n        { value: 'baz' }\r\n    ]\r\n};\r\n\r\n// will returns 'foobarbaz'\r\nvar result = Retriever.make(template).parse(bind);\r\n```\r\n\r\nAnd Enable to use nested section.\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}